<?xml version="1.0"?>
<project name="docbook-src" default="usage">

	<description>
            This Ant build.xml file is used to transform DocBook XML to various
    </description>

	<!-- 
	  =============================================================
      - Configure basic properties that will be used in the file.
      ============================================================= 
    -->
	<property name="docbook.xsl.dir" value="docbook-xsl" />
	<property name="doc.dir" value="bin" />
	<property name="fo.dir" value="fo" />
	<property name="html.stylesheet" value="${docbook.xsl.dir}/xhtml/chunk.xsl" />
	<property name="fo.stylesheet" value="${docbook.xsl.dir}/fo/docbook.xsl" />
	<property name="xalan.lib.dir" value="lib/xalan" />

	<!-- This varibale needs to be changed depending on the system. -->
	<property name="xslt" location="/usr/bin/xsltproc" />

	<target name="all" description="Builds the documentation.">
		<antcall target="clean" />
		<antcall target="build-pdf" />
		<antcall target="build-html" />
	</target>

	<!--
	  =============================================================
      - target:  usage
      =============================================================
    -->
	<target name="usage" description="Prints the Ant build.xml usage">
		<echo message="Use -projecthelp to get a list of the available targets." />
	</target>

	<!--
	  =============================================================
      - target:  clean
      - description: Cleans up the project directory.
     =============================================================
      -->
	<target name="clean" description="Cleans up generated files.">
		<delete dir="${doc.dir}" />
	</target>

	<!--
	  =============================================================
      - target:  init
      - description: intialises the project directory. 
     =============================================================
      -->
	<target name="init">
		<mkdir dir="${doc.dir}/html" />
		<mkdir dir="${doc.dir}/fo" />
	</target>

	<!--
	  =============================================================
      - target:  build-html
      - description:  Iterates through a directory and transforms
      -     .xml files into .html files using the DocBook XSL.
      =============================================================
      -->
	<target name="build-html" depends="init" description="Generates HTML files from DocBook XML">

		<exec executable="${xslt}">
			<arg value="--output" />
			<arg value="${doc.dir}/html/" />
			<arg value="--param" />
			<arg value="html.stylesheet" />
			<arg value="'style.css'" />
			<arg value="${html.stylesheet}" />
			<arg value="src/manual.xml" />
		</exec>
		<copy todir="${doc.dir}/html">
			<fileset dir="css">
				<include name="style.css" />
			</fileset>
		</copy>
	</target>

	<!--
	    =============================================================
	    - target:  build-pdf
	    - description:  Iterates through a directory and transforms
	    -     .xml files into .fo files which can then be turned into DocBook XML
	    -     files.
	    =============================================================
	    -->
	<target name="build-pdf" depends="init" description="Generates PDF files from DocBook XML">
		<exec executable="${xslt}">
			<arg value="--output" />
			<arg value="${doc.dir}/fo/java_manual.fo" />
			<arg value="${fo.stylesheet}" />
			<arg value="src/manual.xml" />
		</exec>
		<property name="fop.home" value="lib/fop" />
		<taskdef name="fop" classname="org.apache.fop.tools.anttasks.Fop">
			<classpath>
				<fileset dir="${fop.home}/lib">
					<include name="*.jar" />
				</fileset>
				<fileset dir="${fop.home}/build">
					<include name="fop.jar" />
					<include name="fop-hyph.jar" />
				</fileset>
			</classpath>
		</taskdef>
		<fop format="application/pdf" fofile="${doc.dir}/fo/java_manual.fo" outfile="${doc.dir}/java_manual.pdf" />
	</target>

</project>
